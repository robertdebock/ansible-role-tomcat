---
# tasks file for tomcat
- name: ensure group exists
  group:
    name: "{{ item.group | default(tomcat_group) }}"
  with_items:
    - "{{ tomcat_layout }}"
  loop_control:
    label: "{{ item.group }}"

- name: ensure user exists
  user:
    name: "{{ item.user | default(tomcat_user) }}"
    createhome: no
    system: yes
  with_items:
    - "{{ tomcat_layout }}"
  loop_control:
    label: "{{ item.user }}"

- name: ensure tomcat_directory exists
  file:
    path: "{{ item.directory | default(tomcat_directory) }}"
    state: directory
    owner: "{{ item.user | default(tomcat_user) }}"
    group: "{{ item.group | default(tomcat_group) }}"
  with_items:
    - "{{ tomcat_layout }}"
  loop_control:
    label: "{{ item.directory }}"

- name: download tomcat
  get_url:
    url: "{{ tomcat_mirror }}/{{ tomcat_archive[item.version | default (tomcat_version)]['url_path'] }}/{{ tomcat_archive[item.version | default (tomcat_version)]['targz'] }}"
    dest: /tmp
  with_items:
    - "{{ tomcat_layout }}"
  loop_control:
    label: "{{ item.version }}"

- name: install tomcat
  unarchive:
    src: "/tmp/{{ tomcat_archive[item.version | default (tomcat_version)]['targz'] }}"
    dest: "{{ item.directory | default(tomcat_directory) }}"
    group: "{{ item.group | default(tomcat_group) }}"
    owner: "{{ item.user | default(tomcat_user) }}"
    remote_src: yes
    creates: "{{ item.directory | default(tomcat_directory) }}/{{ tomcat_archive[item.version | default (tomcat_version)]['dir'] }}"
  with_items:
    - "{{ tomcat_layout }}"
  loop_control:
    label: "{{ item.directory }}"

- name: configure tomcat
  template:
    src: server.xml.j2
    dest: "{{ item.directory | default(tomcat_directory) }}/{{ tomcat_archive[item.version | default (tomcat_version)]['dir'] }}/conf/server.xml"
  with_items:
    - "{{ tomcat_layout }}"
  loop_control:
    label: "{{ item.directory }}"

- name: register tomcat to a sysvinit system
  template:
    src: tomcat.j2
    dest: "/etc/init.d/{{ item.name | default(tomcat_name) }}"
    mode: 0750
  when:
    - ansible_service_mgr == "sysvinit" or ansible_service_mgr == "upstart"
  with_items:
    - "{{ tomcat_layout }}"
  loop_control:
    label: "{{ item.name }}"

- name: loop over names in tomcat_layout
  include: deploy_wars.yml
  with_items: "{{ tomcat_layout }}"
  loop_control:
    loop_var: tomcat_names

- name: register tomcat to a systemd system
  template:
    src: tomcat.service.j2
    dest: /etc/systemd/system/{{ item.name | default(tomcat_name) }}.service
  when:
    - ansible_service_mgr == "systemd"
  with_items:
    - "{{ tomcat_layout }}"
  loop_control:
    label: "{{ item.name }}"

- name: start and enable software
  service:
    name: "{{ item.name | default(tomcat_name) }}"
    state: started
    enabled: yes
  with_items:
    - "{{ tomcat_layout }}"
  when:
    - ansible_virtualization_type != "docker"
  loop_control:
    label: "{{ item.name }}"
